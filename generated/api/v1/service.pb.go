// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status represents the various cluster states.
type Status int32

const (
	// FAILED is the state when the cluster has failed in one way or another.
	Status_FAILED Status = 0
	// CREATING is the state when the cluster is being created.
	Status_CREATING Status = 1
	// READY is the state when the cluster is available and ready for use.
	Status_READY Status = 2
	// DESTROYING is the state when the cluster is being destroyed.
	Status_DESTROYING Status = 3
	// FINISHED is the state when the cluster has been successfully destroyed.
	Status_FINISHED Status = 4
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "FAILED",
		1: "CREATING",
		2: "READY",
		3: "DESTROYING",
		4: "FINISHED",
	}
	Status_value = map[string]int32{
		"FAILED":     0,
		"CREATING":   1,
		"READY":      2,
		"DESTROYING": 3,
		"FINISHED":   4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

// availability represents the availability classification levels.
type FlavorAvailability int32

const (
	// alpha is completely experemental, and is not expected to work in any way.
	Flavor_alpha FlavorAvailability = 0
	// beta is being tested, and is expected to work with minor issues.
	Flavor_beta FlavorAvailability = 1
	// stable is available for public consumption, and works without issue.
	Flavor_stable FlavorAvailability = 2
	// default is stable, and available for customer demo consumption.
	// Exactly 1 flavor should be configured as default.
	Flavor_default FlavorAvailability = 3
	// test are flavors for e2e and unit testing
	Flavor_test FlavorAvailability = 4
	// janitorDelete is for deleting clusters with the Infra Janitor.
	Flavor_janitorDelete FlavorAvailability = 5
	// deprecated is a flavor that is no longer supported and will be removed in the future.
	Flavor_deprecated FlavorAvailability = 6
)

// Enum value maps for FlavorAvailability.
var (
	FlavorAvailability_name = map[int32]string{
		0: "alpha",
		1: "beta",
		2: "stable",
		3: "default",
		4: "test",
		5: "janitorDelete",
		6: "deprecated",
	}
	FlavorAvailability_value = map[string]int32{
		"alpha":         0,
		"beta":          1,
		"stable":        2,
		"default":       3,
		"test":          4,
		"janitorDelete": 5,
		"deprecated":    6,
	}
)

func (x FlavorAvailability) Enum() *FlavorAvailability {
	p := new(FlavorAvailability)
	*p = x
	return p
}

func (x FlavorAvailability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlavorAvailability) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[1].Descriptor()
}

func (FlavorAvailability) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[1]
}

func (x FlavorAvailability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlavorAvailability.Descriptor instead.
func (FlavorAvailability) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8, 0}
}

// method represents the various lifespan operations.
type LifespanRequest_Method int32

const (
	// REPLACE indicates that the given lifespan should replace the current
	// lifespan.
	LifespanRequest_REPLACE LifespanRequest_Method = 0
	// ADD indicates that the given lifespan should be added to the current
	// lifespan.
	LifespanRequest_ADD LifespanRequest_Method = 1
	// SUBTRACT indicates that the given lifespan should be subtracted from
	// the current lifespan.
	LifespanRequest_SUBTRACT LifespanRequest_Method = 2
)

// Enum value maps for LifespanRequest_Method.
var (
	LifespanRequest_Method_name = map[int32]string{
		0: "REPLACE",
		1: "ADD",
		2: "SUBTRACT",
	}
	LifespanRequest_Method_value = map[string]int32{
		"REPLACE":  0,
		"ADD":      1,
		"SUBTRACT": 2,
	}
)

func (x LifespanRequest_Method) Enum() *LifespanRequest_Method {
	p := new(LifespanRequest_Method)
	*p = x
	return p
}

func (x LifespanRequest_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LifespanRequest_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[2].Descriptor()
}

func (LifespanRequest_Method) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[2]
}

func (x LifespanRequest_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LifespanRequest_Method.Descriptor instead.
func (LifespanRequest_Method) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{14, 0}
}

// ResourceByID represents a generic reference to a named/unique resource.
type ResourceByID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceByID) Reset() {
	*x = ResourceByID{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceByID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceByID) ProtoMessage() {}

func (x *ResourceByID) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceByID.ProtoReflect.Descriptor instead.
func (*ResourceByID) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceByID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildDate     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=BuildDate,proto3" json:"BuildDate,omitempty"`
	GitCommit     string                 `protobuf:"bytes,2,opt,name=GitCommit,proto3" json:"GitCommit,omitempty"`
	GoVersion     string                 `protobuf:"bytes,3,opt,name=GoVersion,proto3" json:"GoVersion,omitempty"`
	Platform      string                 `protobuf:"bytes,4,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Version       string                 `protobuf:"bytes,5,opt,name=Version,proto3" json:"Version,omitempty"`
	Workflow      string                 `protobuf:"bytes,6,opt,name=Workflow,proto3" json:"Workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *Version) GetBuildDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildDate
	}
	return nil
}

func (x *Version) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *Version) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *Version) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Version) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Version) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

// WhoamiResponse represents details about the current authenticated principal.
type WhoamiResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Principal represents a possible type of authenticated principal.
	//
	// Types that are valid to be assigned to Principal:
	//
	//	*WhoamiResponse_User
	//	*WhoamiResponse_ServiceAccount
	Principal     isWhoamiResponse_Principal `protobuf_oneof:"principal"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhoamiResponse) Reset() {
	*x = WhoamiResponse{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhoamiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoamiResponse) ProtoMessage() {}

func (x *WhoamiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoamiResponse.ProtoReflect.Descriptor instead.
func (*WhoamiResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *WhoamiResponse) GetPrincipal() isWhoamiResponse_Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *WhoamiResponse) GetUser() *User {
	if x != nil {
		if x, ok := x.Principal.(*WhoamiResponse_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *WhoamiResponse) GetServiceAccount() *ServiceAccount {
	if x != nil {
		if x, ok := x.Principal.(*WhoamiResponse_ServiceAccount); ok {
			return x.ServiceAccount
		}
	}
	return nil
}

type isWhoamiResponse_Principal interface {
	isWhoamiResponse_Principal()
}

type WhoamiResponse_User struct {
	// User represents an authenticated human.
	User *User `protobuf:"bytes,1,opt,name=User,proto3,oneof"`
}

type WhoamiResponse_ServiceAccount struct {
	// ServiceAccount represents an authenticated service account robot.
	ServiceAccount *ServiceAccount `protobuf:"bytes,2,opt,name=ServiceAccount,proto3,oneof"`
}

func (*WhoamiResponse_User) isWhoamiResponse_Principal() {}

func (*WhoamiResponse_ServiceAccount) isWhoamiResponse_Principal() {}

// User represents an authenticated (human) principal.
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expiry is the expiration date of this user session. Used only as a hint
	// to the user and not for enforcement.
	Expiry *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=Expiry,proto3" json:"Expiry,omitempty"`
	// Name is the full name of the user.
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// Email is the email address of the user.
	Email string `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	// Picture is a URL linking to this user's profile picture, if available.
	Picture       string `protobuf:"bytes,4,opt,name=Picture,proto3" json:"Picture,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

// ServiceAccount represents an authenticated service account (robot) principal.
type ServiceAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is a human readable name for the service account.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Description is a human readable description for the service account.
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	// Email is the Red Hat email address for the service account.
	Email string `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	// IssuedAt is the time of issuing the service account token.
	IssuedAt int64 `protobuf:"varint,4,opt,name=IssuedAt,proto3" json:"IssuedAt,omitempty"`
	// NotBefore is the beginning of service account token valid time period.
	NotBefore int64 `protobuf:"varint,5,opt,name=NotBefore,proto3" json:"NotBefore,omitempty"`
	// ExpiresAt is the end of service account token valid time period.
	ExpiresAt     int64 `protobuf:"varint,6,opt,name=ExpiresAt,proto3" json:"ExpiresAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAccount) Reset() {
	*x = ServiceAccount{}
	mi := &file_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccount) ProtoMessage() {}

func (x *ServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccount.ProtoReflect.Descriptor instead.
func (*ServiceAccount) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceAccount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ServiceAccount) GetIssuedAt() int64 {
	if x != nil {
		return x.IssuedAt
	}
	return 0
}

func (x *ServiceAccount) GetNotBefore() int64 {
	if x != nil {
		return x.NotBefore
	}
	return 0
}

func (x *ServiceAccount) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type TokenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account is the service account the token was generated for.
	Account *ServiceAccount `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	// Token is the token generated for the service account.
	Token         string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenResponse) Reset() {
	*x = TokenResponse{}
	mi := &file_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse) ProtoMessage() {}

func (x *TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse.ProtoReflect.Descriptor instead.
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *TokenResponse) GetAccount() *ServiceAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *TokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Parameter represents a single parameter that is needed to launch a flavor.
type Parameter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the unique name of the parameter.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Description is a human readable description for the parameter.
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	// Value that this parameter could have.
	// If the parameter is not optional, then value serves as an example.
	// If the parameter is optional, then value serves as a default.
	// If the parameter is internal, then value serves as a hardcoded constant.
	Value string `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
	// Optional indicates that this parameter can be optionally provided by a
	// user. If the user does not provide a value, then Value serves as a
	// default.
	Optional bool `protobuf:"varint,4,opt,name=Optional,proto3" json:"Optional,omitempty"`
	// Internal indicates that this parameter should not be provided by a user,
	// but rather treats Value as a hardcoded constant.
	Internal bool `protobuf:"varint,5,opt,name=Internal,proto3" json:"Internal,omitempty"`
	// The relative order of importance of this parameter for when presenting in
	// a UI for example.
	Order int32  `protobuf:"varint,6,opt,name=Order,proto3" json:"Order,omitempty"`
	Help  string `protobuf:"bytes,7,opt,name=Help,proto3" json:"Help,omitempty"`
	// Indicates that the value for this parameter can be provided from the
	// contents of a file.
	FromFile      bool `protobuf:"varint,8,opt,name=FromFile,proto3" json:"FromFile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	mi := &file_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Parameter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Parameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Parameter) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *Parameter) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *Parameter) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Parameter) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *Parameter) GetFromFile() bool {
	if x != nil {
		return x.FromFile
	}
	return false
}

// FlavorArtifact represents a single artifact that is produced by a flavor.
type FlavorArtifact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the unique name of the artifact.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Description is a human readable description for the artifact.
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	// Tags is a set of artifact tags.
	Tags          map[string]*emptypb.Empty `protobuf:"bytes,3,rep,name=Tags,proto3" json:"Tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlavorArtifact) Reset() {
	*x = FlavorArtifact{}
	mi := &file_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlavorArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlavorArtifact) ProtoMessage() {}

func (x *FlavorArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlavorArtifact.ProtoReflect.Descriptor instead.
func (*FlavorArtifact) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *FlavorArtifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlavorArtifact) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FlavorArtifact) GetTags() map[string]*emptypb.Empty {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Flavor represents a configured cluster flavor.
type Flavor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique, human type-able, ID for the flavor.
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Name is a human readable name for the flavor.
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// Description is a human readable description for the flavor.
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	// Description is an availability classification for the flavor.
	Availability FlavorAvailability `protobuf:"varint,4,opt,name=Availability,proto3,enum=v1.FlavorAvailability" json:"Availability,omitempty"`
	// Parameters is a map of parameters required for launching this flavor.
	Parameters map[string]*Parameter `protobuf:"bytes,5,rep,name=Parameters,proto3" json:"Parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Artifacts is a map of artifacts produced by this flavor.
	Artifacts map[string]*FlavorArtifact `protobuf:"bytes,6,rep,name=Artifacts,proto3" json:"Artifacts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Aliases are alternative IDs of the flavor.
	Aliases       []string `protobuf:"bytes,7,rep,name=Aliases,proto3" json:"Aliases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flavor) Reset() {
	*x = Flavor{}
	mi := &file_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flavor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flavor) ProtoMessage() {}

func (x *Flavor) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flavor.ProtoReflect.Descriptor instead.
func (*Flavor) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (x *Flavor) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Flavor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flavor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Flavor) GetAvailability() FlavorAvailability {
	if x != nil {
		return x.Availability
	}
	return Flavor_alpha
}

func (x *Flavor) GetParameters() map[string]*Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Flavor) GetArtifacts() map[string]*FlavorArtifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *Flavor) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

// FlavorListRequest represents a request to FlavorService.List.
type FlavorListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// all indicates that all flavors should be returned, by default
	// availability alpha clusters are excluded.
	All           bool `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlavorListRequest) Reset() {
	*x = FlavorListRequest{}
	mi := &file_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlavorListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlavorListRequest) ProtoMessage() {}

func (x *FlavorListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlavorListRequest.ProtoReflect.Descriptor instead.
func (*FlavorListRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9}
}

func (x *FlavorListRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

// FlavorListResponse represents details about the available cluster flavors.
type FlavorListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Default is the flavor ID of the default cluster flavor.
	Default string `protobuf:"bytes,1,opt,name=Default,proto3" json:"Default,omitempty"`
	// Flavors is a list of all available cluster flavors.
	Flavors       []*Flavor `protobuf:"bytes,2,rep,name=Flavors,proto3" json:"Flavors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlavorListResponse) Reset() {
	*x = FlavorListResponse{}
	mi := &file_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlavorListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlavorListResponse) ProtoMessage() {}

func (x *FlavorListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlavorListResponse.ProtoReflect.Descriptor instead.
func (*FlavorListResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{10}
}

func (x *FlavorListResponse) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *FlavorListResponse) GetFlavors() []*Flavor {
	if x != nil {
		return x.Flavors
	}
	return nil
}

// Cluster represents a single cluster.
type Cluster struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique ID for the cluster.
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Status is the current status for the cluster.
	Status Status `protobuf:"varint,2,opt,name=Status,proto3,enum=v1.Status" json:"Status,omitempty"`
	// Flavor is the original flavor ID that launched this cluster.
	Flavor string `protobuf:"bytes,3,opt,name=Flavor,proto3" json:"Flavor,omitempty"`
	// Owner is the email address for the cluster owner.
	Owner string `protobuf:"bytes,4,opt,name=Owner,proto3" json:"Owner,omitempty"`
	// CreatedOn is the timestamp on which the cluster started being created.
	CreatedOn *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreatedOn,proto3" json:"CreatedOn,omitempty"`
	// DestroyedOn is the timestamp on which the cluster finished being
	// destroyed.
	DestroyedOn *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=DestroyedOn,proto3" json:"DestroyedOn,omitempty"`
	// Lifespan is the duration for which the cluster should be kept alive.
	Lifespan *durationpb.Duration `protobuf:"bytes,7,opt,name=Lifespan,proto3" json:"Lifespan,omitempty"`
	// Description is a human readable description for the cluster.
	Description string `protobuf:"bytes,8,opt,name=Description,proto3" json:"Description,omitempty"`
	// URL is an optional URL for this cluster.
	URL string `protobuf:"bytes,9,opt,name=URL,proto3" json:"URL,omitempty"`
	// Connect is a command to add kube connection information to kubeconfig.
	Connect string `protobuf:"bytes,10,opt,name=Connect,proto3" json:"Connect,omitempty"`
	// Parameters is a list of options to configure the cluster creation.
	Parameters    []*Parameter `protobuf:"bytes,11,rep,name=Parameters,proto3" json:"Parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{11}
}

func (x *Cluster) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Cluster) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_FAILED
}

func (x *Cluster) GetFlavor() string {
	if x != nil {
		return x.Flavor
	}
	return ""
}

func (x *Cluster) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Cluster) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *Cluster) GetDestroyedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.DestroyedOn
	}
	return nil
}

func (x *Cluster) GetLifespan() *durationpb.Duration {
	if x != nil {
		return x.Lifespan
	}
	return nil
}

func (x *Cluster) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Cluster) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Cluster) GetConnect() string {
	if x != nil {
		return x.Connect
	}
	return ""
}

func (x *Cluster) GetParameters() []*Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// ClusterListRequest represents a request to ClusterService.List.
type ClusterListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// all indicates that all clusters should be returned, not just the ones
	// owned by the user.
	All bool `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	// expired indicates that expired clusters should be returned, not just the
	// ones that are launching/ready.
	Expired bool `protobuf:"varint,2,opt,name=expired,proto3" json:"expired,omitempty"`
	// list clusters whose ID matches this prefix.
	Prefix string `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// filter clusters whose Status is in the list
	AllowedStatuses []Status `protobuf:"varint,4,rep,packed,name=allowedStatuses,proto3,enum=v1.Status" json:"allowedStatuses,omitempty"`
	// filter clusters whose flavor ID is in the list
	AllowedFlavors []string `protobuf:"bytes,5,rep,name=allowedFlavors,proto3" json:"allowedFlavors,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClusterListRequest) Reset() {
	*x = ClusterListRequest{}
	mi := &file_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterListRequest) ProtoMessage() {}

func (x *ClusterListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterListRequest.ProtoReflect.Descriptor instead.
func (*ClusterListRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{12}
}

func (x *ClusterListRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ClusterListRequest) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *ClusterListRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ClusterListRequest) GetAllowedStatuses() []Status {
	if x != nil {
		return x.AllowedStatuses
	}
	return nil
}

func (x *ClusterListRequest) GetAllowedFlavors() []string {
	if x != nil {
		return x.AllowedFlavors
	}
	return nil
}

// ClusterListResponse represents details about all clusters.
type ClusterListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Clusters is a list of all clusters.
	Clusters      []*Cluster `protobuf:"bytes,1,rep,name=Clusters,proto3" json:"Clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterListResponse) Reset() {
	*x = ClusterListResponse{}
	mi := &file_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterListResponse) ProtoMessage() {}

func (x *ClusterListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterListResponse.ProtoReflect.Descriptor instead.
func (*ClusterListResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{13}
}

func (x *ClusterListResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type LifespanRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the unique ID for the cluster.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Lifespan is the new lifespan.
	Lifespan      *durationpb.Duration   `protobuf:"bytes,2,opt,name=Lifespan,proto3" json:"Lifespan,omitempty"`
	Method        LifespanRequest_Method `protobuf:"varint,3,opt,name=method,proto3,enum=v1.LifespanRequest_Method" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LifespanRequest) Reset() {
	*x = LifespanRequest{}
	mi := &file_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LifespanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifespanRequest) ProtoMessage() {}

func (x *LifespanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifespanRequest.ProtoReflect.Descriptor instead.
func (*LifespanRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{14}
}

func (x *LifespanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LifespanRequest) GetLifespan() *durationpb.Duration {
	if x != nil {
		return x.Lifespan
	}
	return nil
}

func (x *LifespanRequest) GetMethod() LifespanRequest_Method {
	if x != nil {
		return x.Method
	}
	return LifespanRequest_REPLACE
}

// CreateClusterRequest represents details for launching a new cluster.
type CreateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the flavor ID to launch.
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Lifespan is the initial cluster lifespan.
	Lifespan *durationpb.Duration `protobuf:"bytes,2,opt,name=Lifespan,proto3" json:"Lifespan,omitempty"`
	// Parameters is a map of launch parameter names to values.
	Parameters map[string]string `protobuf:"bytes,3,rep,name=Parameters,proto3" json:"Parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Description is a human readable description for the cluster.
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	// NoSlack is used to skip sending Slack messages for cluster lifecycle
	// events.
	NoSlack bool `protobuf:"varint,5,opt,name=NoSlack,proto3" json:"NoSlack,omitempty"`
	// SlackDM is used to choose direct messages for cluster lifecycle
	// events.
	SlackDM       bool `protobuf:"varint,6,opt,name=SlackDM,proto3" json:"SlackDM,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateClusterRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CreateClusterRequest) GetLifespan() *durationpb.Duration {
	if x != nil {
		return x.Lifespan
	}
	return nil
}

func (x *CreateClusterRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *CreateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateClusterRequest) GetNoSlack() bool {
	if x != nil {
		return x.NoSlack
	}
	return false
}

func (x *CreateClusterRequest) GetSlackDM() bool {
	if x != nil {
		return x.SlackDM
	}
	return false
}

type Artifact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	URL           string                 `protobuf:"bytes,3,opt,name=URL,proto3" json:"URL,omitempty"`
	Mode          int32                  `protobuf:"varint,4,opt,name=Mode,proto3" json:"Mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{16}
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Artifact) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Artifact) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type ClusterArtifacts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artifacts     []*Artifact            `protobuf:"bytes,1,rep,name=Artifacts,proto3" json:"Artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterArtifacts) Reset() {
	*x = ClusterArtifacts{}
	mi := &file_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterArtifacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterArtifacts) ProtoMessage() {}

func (x *ClusterArtifacts) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterArtifacts.ProtoReflect.Descriptor instead.
func (*ClusterArtifacts) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{17}
}

func (x *ClusterArtifacts) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Log represents the logs from a specific pod.
type Log struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the name given to this pod in the workflow.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Started is the time at which this pod was started. Used for ordering
	// between pods.
	Started *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=Started,proto3" json:"Started,omitempty"`
	// Body is the raw pod logs.
	Body []byte `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	// Message surfaces step state from Argo.
	Message       string `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{18}
}

func (x *Log) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Log) GetStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.Started
	}
	return nil
}

func (x *Log) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Log) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// LogsResponse represents a collection of logs.
type LogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Logs are all of the logs from a cluster.
	Logs          []*Log `protobuf:"bytes,1,rep,name=Logs,proto3" json:"Logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsResponse) Reset() {
	*x = LogsResponse{}
	mi := &file_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsResponse) ProtoMessage() {}

func (x *LogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsResponse.ProtoReflect.Descriptor instead.
func (*LogsResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{19}
}

func (x *LogsResponse) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type CliUpgradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Os            string                 `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Arch          string                 `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CliUpgradeRequest) Reset() {
	*x = CliUpgradeRequest{}
	mi := &file_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CliUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliUpgradeRequest) ProtoMessage() {}

func (x *CliUpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliUpgradeRequest.ProtoReflect.Descriptor instead.
func (*CliUpgradeRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{20}
}

func (x *CliUpgradeRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *CliUpgradeRequest) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

type CliUpgradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileChunk     []byte                 `protobuf:"bytes,1,opt,name=fileChunk,proto3" json:"fileChunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CliUpgradeResponse) Reset() {
	*x = CliUpgradeResponse{}
	mi := &file_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CliUpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliUpgradeResponse) ProtoMessage() {}

func (x *CliUpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliUpgradeResponse.ProtoReflect.Descriptor instead.
func (*CliUpgradeResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{21}
}

func (x *CliUpgradeResponse) GetFileChunk() []byte {
	if x != nil {
		return x.FileChunk
	}
	return nil
}

type InfraStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MaintenanceActive is an indicator whether a maintenance is ongoing.
	MaintenanceActive bool `protobuf:"varint,1,opt,name=MaintenanceActive,proto3" json:"MaintenanceActive,omitempty"`
	// Maintainer is the email of the person currently doing maintenance.
	Maintainer    string `protobuf:"bytes,2,opt,name=Maintainer,proto3" json:"Maintainer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfraStatus) Reset() {
	*x = InfraStatus{}
	mi := &file_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraStatus) ProtoMessage() {}

func (x *InfraStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraStatus.ProtoReflect.Descriptor instead.
func (*InfraStatus) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{22}
}

func (x *InfraStatus) GetMaintenanceActive() bool {
	if x != nil {
		return x.MaintenanceActive
	}
	return false
}

func (x *InfraStatus) GetMaintainer() string {
	if x != nil {
		return x.Maintainer
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\x02v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x1e\n" +
	"\fResourceByID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xd1\x01\n" +
	"\aVersion\x128\n" +
	"\tBuildDate\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tBuildDate\x12\x1c\n" +
	"\tGitCommit\x18\x02 \x01(\tR\tGitCommit\x12\x1c\n" +
	"\tGoVersion\x18\x03 \x01(\tR\tGoVersion\x12\x1a\n" +
	"\bPlatform\x18\x04 \x01(\tR\bPlatform\x12\x18\n" +
	"\aVersion\x18\x05 \x01(\tR\aVersion\x12\x1a\n" +
	"\bWorkflow\x18\x06 \x01(\tR\bWorkflow\"{\n" +
	"\x0eWhoamiResponse\x12\x1e\n" +
	"\x04User\x18\x01 \x01(\v2\b.v1.UserH\x00R\x04User\x12<\n" +
	"\x0eServiceAccount\x18\x02 \x01(\v2\x12.v1.ServiceAccountH\x00R\x0eServiceAccountB\v\n" +
	"\tprincipal\"~\n" +
	"\x04User\x122\n" +
	"\x06Expiry\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x06Expiry\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x14\n" +
	"\x05Email\x18\x03 \x01(\tR\x05Email\x12\x18\n" +
	"\aPicture\x18\x04 \x01(\tR\aPicture\"\xb4\x01\n" +
	"\x0eServiceAccount\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12 \n" +
	"\vDescription\x18\x02 \x01(\tR\vDescription\x12\x14\n" +
	"\x05Email\x18\x03 \x01(\tR\x05Email\x12\x1a\n" +
	"\bIssuedAt\x18\x04 \x01(\x03R\bIssuedAt\x12\x1c\n" +
	"\tNotBefore\x18\x05 \x01(\x03R\tNotBefore\x12\x1c\n" +
	"\tExpiresAt\x18\x06 \x01(\x03R\tExpiresAt\"S\n" +
	"\rTokenResponse\x12,\n" +
	"\aAccount\x18\x01 \x01(\v2\x12.v1.ServiceAccountR\aAccount\x12\x14\n" +
	"\x05Token\x18\x02 \x01(\tR\x05Token\"\xd5\x01\n" +
	"\tParameter\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12 \n" +
	"\vDescription\x18\x02 \x01(\tR\vDescription\x12\x14\n" +
	"\x05Value\x18\x03 \x01(\tR\x05Value\x12\x1a\n" +
	"\bOptional\x18\x04 \x01(\bR\bOptional\x12\x1a\n" +
	"\bInternal\x18\x05 \x01(\bR\bInternal\x12\x14\n" +
	"\x05Order\x18\x06 \x01(\x05R\x05Order\x12\x12\n" +
	"\x04Help\x18\a \x01(\tR\x04Help\x12\x1a\n" +
	"\bFromFile\x18\b \x01(\bR\bFromFile\"\xc9\x01\n" +
	"\x0eFlavorArtifact\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12 \n" +
	"\vDescription\x18\x02 \x01(\tR\vDescription\x120\n" +
	"\x04Tags\x18\x03 \x03(\v2\x1c.v1.FlavorArtifact.TagsEntryR\x04Tags\x1aO\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.EmptyR\x05value:\x028\x01\"\xa5\x04\n" +
	"\x06Flavor\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12 \n" +
	"\vDescription\x18\x03 \x01(\tR\vDescription\x12;\n" +
	"\fAvailability\x18\x04 \x01(\x0e2\x17.v1.Flavor.availabilityR\fAvailability\x12:\n" +
	"\n" +
	"Parameters\x18\x05 \x03(\v2\x1a.v1.Flavor.ParametersEntryR\n" +
	"Parameters\x127\n" +
	"\tArtifacts\x18\x06 \x03(\v2\x19.v1.Flavor.ArtifactsEntryR\tArtifacts\x12\x18\n" +
	"\aAliases\x18\a \x03(\tR\aAliases\x1aL\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\x05value\x18\x02 \x01(\v2\r.v1.ParameterR\x05value:\x028\x01\x1aP\n" +
	"\x0eArtifactsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.v1.FlavorArtifactR\x05value:\x028\x01\"i\n" +
	"\favailability\x12\t\n" +
	"\x05alpha\x10\x00\x12\b\n" +
	"\x04beta\x10\x01\x12\n" +
	"\n" +
	"\x06stable\x10\x02\x12\v\n" +
	"\adefault\x10\x03\x12\b\n" +
	"\x04test\x10\x04\x12\x11\n" +
	"\rjanitorDelete\x10\x05\x12\x0e\n" +
	"\n" +
	"deprecated\x10\x06\"%\n" +
	"\x11FlavorListRequest\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\"T\n" +
	"\x12FlavorListResponse\x12\x18\n" +
	"\aDefault\x18\x01 \x01(\tR\aDefault\x12$\n" +
	"\aFlavors\x18\x02 \x03(\v2\n" +
	".v1.FlavorR\aFlavors\"\x97\x03\n" +
	"\aCluster\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\"\n" +
	"\x06Status\x18\x02 \x01(\x0e2\n" +
	".v1.StatusR\x06Status\x12\x16\n" +
	"\x06Flavor\x18\x03 \x01(\tR\x06Flavor\x12\x14\n" +
	"\x05Owner\x18\x04 \x01(\tR\x05Owner\x128\n" +
	"\tCreatedOn\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tCreatedOn\x12<\n" +
	"\vDestroyedOn\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vDestroyedOn\x125\n" +
	"\bLifespan\x18\a \x01(\v2\x19.google.protobuf.DurationR\bLifespan\x12 \n" +
	"\vDescription\x18\b \x01(\tR\vDescription\x12\x10\n" +
	"\x03URL\x18\t \x01(\tR\x03URL\x12\x18\n" +
	"\aConnect\x18\n" +
	" \x01(\tR\aConnect\x12-\n" +
	"\n" +
	"Parameters\x18\v \x03(\v2\r.v1.ParameterR\n" +
	"Parameters\"\xb6\x01\n" +
	"\x12ClusterListRequest\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\x12\x18\n" +
	"\aexpired\x18\x02 \x01(\bR\aexpired\x12\x16\n" +
	"\x06prefix\x18\x03 \x01(\tR\x06prefix\x124\n" +
	"\x0fallowedStatuses\x18\x04 \x03(\x0e2\n" +
	".v1.StatusR\x0fallowedStatuses\x12&\n" +
	"\x0eallowedFlavors\x18\x05 \x03(\tR\x0eallowedFlavors\">\n" +
	"\x13ClusterListResponse\x12'\n" +
	"\bClusters\x18\x01 \x03(\v2\v.v1.ClusterR\bClusters\"\xba\x01\n" +
	"\x0fLifespanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x125\n" +
	"\bLifespan\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\bLifespan\x122\n" +
	"\x06method\x18\x03 \x01(\x0e2\x1a.v1.LifespanRequest.MethodR\x06method\",\n" +
	"\x06Method\x12\v\n" +
	"\aREPLACE\x10\x00\x12\a\n" +
	"\x03ADD\x10\x01\x12\f\n" +
	"\bSUBTRACT\x10\x02\"\xbc\x02\n" +
	"\x14CreateClusterRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x125\n" +
	"\bLifespan\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\bLifespan\x12H\n" +
	"\n" +
	"Parameters\x18\x03 \x03(\v2(.v1.CreateClusterRequest.ParametersEntryR\n" +
	"Parameters\x12 \n" +
	"\vDescription\x18\x04 \x01(\tR\vDescription\x12\x18\n" +
	"\aNoSlack\x18\x05 \x01(\bR\aNoSlack\x12\x18\n" +
	"\aSlackDM\x18\x06 \x01(\bR\aSlackDM\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"f\n" +
	"\bArtifact\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12 \n" +
	"\vDescription\x18\x02 \x01(\tR\vDescription\x12\x10\n" +
	"\x03URL\x18\x03 \x01(\tR\x03URL\x12\x12\n" +
	"\x04Mode\x18\x04 \x01(\x05R\x04Mode\">\n" +
	"\x10ClusterArtifacts\x12*\n" +
	"\tArtifacts\x18\x01 \x03(\v2\f.v1.ArtifactR\tArtifacts\"}\n" +
	"\x03Log\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x124\n" +
	"\aStarted\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aStarted\x12\x12\n" +
	"\x04Body\x18\x03 \x01(\fR\x04Body\x12\x18\n" +
	"\aMessage\x18\x04 \x01(\tR\aMessage\"+\n" +
	"\fLogsResponse\x12\x1b\n" +
	"\x04Logs\x18\x01 \x03(\v2\a.v1.LogR\x04Logs\"7\n" +
	"\x11CliUpgradeRequest\x12\x0e\n" +
	"\x02os\x18\x01 \x01(\tR\x02os\x12\x12\n" +
	"\x04arch\x18\x02 \x01(\tR\x04arch\"2\n" +
	"\x12CliUpgradeResponse\x12\x1c\n" +
	"\tfileChunk\x18\x01 \x01(\fR\tfileChunk\"[\n" +
	"\vInfraStatus\x12,\n" +
	"\x11MaintenanceActive\x18\x01 \x01(\bR\x11MaintenanceActive\x12\x1e\n" +
	"\n" +
	"Maintainer\x18\x02 \x01(\tR\n" +
	"Maintainer*K\n" +
	"\x06Status\x12\n" +
	"\n" +
	"\x06FAILED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\t\n" +
	"\x05READY\x10\x02\x12\x0e\n" +
	"\n" +
	"DESTROYING\x10\x03\x12\f\n" +
	"\bFINISHED\x10\x042X\n" +
	"\x0eVersionService\x12F\n" +
	"\n" +
	"GetVersion\x12\x16.google.protobuf.Empty\x1a\v.v1.Version\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/v1/version2\xf4\x01\n" +
	"\vUserService\x12H\n" +
	"\x06Whoami\x12\x16.google.protobuf.Empty\x1a\x12.v1.WhoamiResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/whoami\x12Q\n" +
	"\vCreateToken\x12\x12.v1.ServiceAccount\x1a\x11.v1.TokenResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/token-create\x12H\n" +
	"\x05Token\x12\x16.google.protobuf.Empty\x1a\x11.v1.TokenResponse\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/v1/token2\x99\x01\n" +
	"\rFlavorService\x12I\n" +
	"\x04List\x12\x15.v1.FlavorListRequest\x1a\x16.v1.FlavorListResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/flavor\x12=\n" +
	"\x04Info\x12\x10.v1.ResourceByID\x1a\n" +
	".v1.Flavor\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/flavor/{id}2\xc1\x04\n" +
	"\x0eClusterService\x12?\n" +
	"\x04Info\x12\x10.v1.ResourceByID\x1a\v.v1.Cluster\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/cluster/{id}\x12L\n" +
	"\x04List\x12\x16.v1.ClusterListRequest\x1a\x17.v1.ClusterListResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/v1/cluster\x12`\n" +
	"\bLifespan\x12\x13.v1.LifespanRequest\x1a\x19.google.protobuf.Duration\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/cluster/{id}/lifespan\x12L\n" +
	"\x06Create\x12\x18.v1.CreateClusterRequest\x1a\x10.v1.ResourceByID\"\x16\x82\xd3\xe4\x93\x02\x10:\x01*\"\v/v1/cluster\x12W\n" +
	"\tArtifacts\x12\x10.v1.ResourceByID\x1a\x14.v1.ClusterArtifacts\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/v1/cluster/{id}/artifacts\x12L\n" +
	"\x06Delete\x12\x10.v1.ResourceByID\x1a\x16.google.protobuf.Empty\"\x18\x82\xd3\xe4\x93\x02\x12*\x10/v1/cluster/{id}\x12I\n" +
	"\x04Logs\x12\x10.v1.ResourceByID\x1a\x10.v1.LogsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/cluster/{id}/logs2m\n" +
	"\n" +
	"CliService\x12_\n" +
	"\aUpgrade\x12\x15.v1.CliUpgradeRequest\x1a\x16.v1.CliUpgradeResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/cli/{os}/{arch}/upgrade0\x012\xed\x01\n" +
	"\x12InfraStatusService\x12H\n" +
	"\tGetStatus\x12\x16.google.protobuf.Empty\x1a\x0f.v1.InfraStatus\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/status\x12J\n" +
	"\vResetStatus\x12\x16.google.protobuf.Empty\x1a\x0f.v1.InfraStatus\"\x12\x82\xd3\xe4\x93\x02\f*\n" +
	"/v1/status\x12A\n" +
	"\tSetStatus\x12\x0f.v1.InfraStatus\x1a\x0f.v1.InfraStatus\"\x12\x82\xd3\xe4\x93\x02\f\x1a\n" +
	"/v1/statusB,Z*github.com/stackrox/infra/generated/api/v1b\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_service_proto_goTypes = []any{
	(Status)(0),                   // 0: v1.Status
	(FlavorAvailability)(0),       // 1: v1.Flavor.availability
	(LifespanRequest_Method)(0),   // 2: v1.LifespanRequest.Method
	(*ResourceByID)(nil),          // 3: v1.ResourceByID
	(*Version)(nil),               // 4: v1.Version
	(*WhoamiResponse)(nil),        // 5: v1.WhoamiResponse
	(*User)(nil),                  // 6: v1.User
	(*ServiceAccount)(nil),        // 7: v1.ServiceAccount
	(*TokenResponse)(nil),         // 8: v1.TokenResponse
	(*Parameter)(nil),             // 9: v1.Parameter
	(*FlavorArtifact)(nil),        // 10: v1.FlavorArtifact
	(*Flavor)(nil),                // 11: v1.Flavor
	(*FlavorListRequest)(nil),     // 12: v1.FlavorListRequest
	(*FlavorListResponse)(nil),    // 13: v1.FlavorListResponse
	(*Cluster)(nil),               // 14: v1.Cluster
	(*ClusterListRequest)(nil),    // 15: v1.ClusterListRequest
	(*ClusterListResponse)(nil),   // 16: v1.ClusterListResponse
	(*LifespanRequest)(nil),       // 17: v1.LifespanRequest
	(*CreateClusterRequest)(nil),  // 18: v1.CreateClusterRequest
	(*Artifact)(nil),              // 19: v1.Artifact
	(*ClusterArtifacts)(nil),      // 20: v1.ClusterArtifacts
	(*Log)(nil),                   // 21: v1.Log
	(*LogsResponse)(nil),          // 22: v1.LogsResponse
	(*CliUpgradeRequest)(nil),     // 23: v1.CliUpgradeRequest
	(*CliUpgradeResponse)(nil),    // 24: v1.CliUpgradeResponse
	(*InfraStatus)(nil),           // 25: v1.InfraStatus
	nil,                           // 26: v1.FlavorArtifact.TagsEntry
	nil,                           // 27: v1.Flavor.ParametersEntry
	nil,                           // 28: v1.Flavor.ArtifactsEntry
	nil,                           // 29: v1.CreateClusterRequest.ParametersEntry
	(*timestamppb.Timestamp)(nil), // 30: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 31: google.protobuf.Duration
	(*emptypb.Empty)(nil),         // 32: google.protobuf.Empty
}
var file_service_proto_depIdxs = []int32{
	30, // 0: v1.Version.BuildDate:type_name -> google.protobuf.Timestamp
	6,  // 1: v1.WhoamiResponse.User:type_name -> v1.User
	7,  // 2: v1.WhoamiResponse.ServiceAccount:type_name -> v1.ServiceAccount
	30, // 3: v1.User.Expiry:type_name -> google.protobuf.Timestamp
	7,  // 4: v1.TokenResponse.Account:type_name -> v1.ServiceAccount
	26, // 5: v1.FlavorArtifact.Tags:type_name -> v1.FlavorArtifact.TagsEntry
	1,  // 6: v1.Flavor.Availability:type_name -> v1.Flavor.availability
	27, // 7: v1.Flavor.Parameters:type_name -> v1.Flavor.ParametersEntry
	28, // 8: v1.Flavor.Artifacts:type_name -> v1.Flavor.ArtifactsEntry
	11, // 9: v1.FlavorListResponse.Flavors:type_name -> v1.Flavor
	0,  // 10: v1.Cluster.Status:type_name -> v1.Status
	30, // 11: v1.Cluster.CreatedOn:type_name -> google.protobuf.Timestamp
	30, // 12: v1.Cluster.DestroyedOn:type_name -> google.protobuf.Timestamp
	31, // 13: v1.Cluster.Lifespan:type_name -> google.protobuf.Duration
	9,  // 14: v1.Cluster.Parameters:type_name -> v1.Parameter
	0,  // 15: v1.ClusterListRequest.allowedStatuses:type_name -> v1.Status
	14, // 16: v1.ClusterListResponse.Clusters:type_name -> v1.Cluster
	31, // 17: v1.LifespanRequest.Lifespan:type_name -> google.protobuf.Duration
	2,  // 18: v1.LifespanRequest.method:type_name -> v1.LifespanRequest.Method
	31, // 19: v1.CreateClusterRequest.Lifespan:type_name -> google.protobuf.Duration
	29, // 20: v1.CreateClusterRequest.Parameters:type_name -> v1.CreateClusterRequest.ParametersEntry
	19, // 21: v1.ClusterArtifacts.Artifacts:type_name -> v1.Artifact
	30, // 22: v1.Log.Started:type_name -> google.protobuf.Timestamp
	21, // 23: v1.LogsResponse.Logs:type_name -> v1.Log
	32, // 24: v1.FlavorArtifact.TagsEntry.value:type_name -> google.protobuf.Empty
	9,  // 25: v1.Flavor.ParametersEntry.value:type_name -> v1.Parameter
	10, // 26: v1.Flavor.ArtifactsEntry.value:type_name -> v1.FlavorArtifact
	32, // 27: v1.VersionService.GetVersion:input_type -> google.protobuf.Empty
	32, // 28: v1.UserService.Whoami:input_type -> google.protobuf.Empty
	7,  // 29: v1.UserService.CreateToken:input_type -> v1.ServiceAccount
	32, // 30: v1.UserService.Token:input_type -> google.protobuf.Empty
	12, // 31: v1.FlavorService.List:input_type -> v1.FlavorListRequest
	3,  // 32: v1.FlavorService.Info:input_type -> v1.ResourceByID
	3,  // 33: v1.ClusterService.Info:input_type -> v1.ResourceByID
	15, // 34: v1.ClusterService.List:input_type -> v1.ClusterListRequest
	17, // 35: v1.ClusterService.Lifespan:input_type -> v1.LifespanRequest
	18, // 36: v1.ClusterService.Create:input_type -> v1.CreateClusterRequest
	3,  // 37: v1.ClusterService.Artifacts:input_type -> v1.ResourceByID
	3,  // 38: v1.ClusterService.Delete:input_type -> v1.ResourceByID
	3,  // 39: v1.ClusterService.Logs:input_type -> v1.ResourceByID
	23, // 40: v1.CliService.Upgrade:input_type -> v1.CliUpgradeRequest
	32, // 41: v1.InfraStatusService.GetStatus:input_type -> google.protobuf.Empty
	32, // 42: v1.InfraStatusService.ResetStatus:input_type -> google.protobuf.Empty
	25, // 43: v1.InfraStatusService.SetStatus:input_type -> v1.InfraStatus
	4,  // 44: v1.VersionService.GetVersion:output_type -> v1.Version
	5,  // 45: v1.UserService.Whoami:output_type -> v1.WhoamiResponse
	8,  // 46: v1.UserService.CreateToken:output_type -> v1.TokenResponse
	8,  // 47: v1.UserService.Token:output_type -> v1.TokenResponse
	13, // 48: v1.FlavorService.List:output_type -> v1.FlavorListResponse
	11, // 49: v1.FlavorService.Info:output_type -> v1.Flavor
	14, // 50: v1.ClusterService.Info:output_type -> v1.Cluster
	16, // 51: v1.ClusterService.List:output_type -> v1.ClusterListResponse
	31, // 52: v1.ClusterService.Lifespan:output_type -> google.protobuf.Duration
	3,  // 53: v1.ClusterService.Create:output_type -> v1.ResourceByID
	20, // 54: v1.ClusterService.Artifacts:output_type -> v1.ClusterArtifacts
	32, // 55: v1.ClusterService.Delete:output_type -> google.protobuf.Empty
	22, // 56: v1.ClusterService.Logs:output_type -> v1.LogsResponse
	24, // 57: v1.CliService.Upgrade:output_type -> v1.CliUpgradeResponse
	25, // 58: v1.InfraStatusService.GetStatus:output_type -> v1.InfraStatus
	25, // 59: v1.InfraStatusService.ResetStatus:output_type -> v1.InfraStatus
	25, // 60: v1.InfraStatusService.SetStatus:output_type -> v1.InfraStatus
	44, // [44:61] is the sub-list for method output_type
	27, // [27:44] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_service_proto_msgTypes[2].OneofWrappers = []any{
		(*WhoamiResponse_User)(nil),
		(*WhoamiResponse_ServiceAccount)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
