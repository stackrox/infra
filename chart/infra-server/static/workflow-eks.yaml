apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: eks-
spec:
  entrypoint: start
  arguments:
    parameters:
      - name: name
      - name: nodes
        value: ""
      - name: machine-type
        value: ""
      - name: k8s-version
        value: ""
      - name: user-arns
        value: ""

  templates:
    - name: start
      steps:
        - - name: create
            template: create

        - - name: wait
            template: wait

        - - name: destroy
            template: destroy

    - name: create
      outputs:
        artifacts:
          - name: kubeconfig
            path: /data/eks-kube.yaml    
      container:
        image: gcr.io/stackrox-infra/automation-flavors/eks:0.0.4-3-gcc6f16f-snapshot
        imagePullPolicy: Always
        args:
          - create
          - "{{workflow.parameters.name}}"
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_SECRET_ACCESS_KEY
          - name: NODE_COUNT
            value: "{{workflow.parameters.nodes}}"
          - name: INSTANCE_TYPE
            value: "{{workflow.parameters.machine-type}}"
          - name: K8S_VERSION
            value: "{{workflow.parameters.k8s-version}}"
          - name: USER_ARNS
            value: "{{workflow.parameters.user-arns}}"
        volumeMounts:
          - name: data
            mountPath: /data
      volumes:
        - name: data
          emptyDir: {}

    - name: wait
      suspend: {}

    - name: destroy
      container:
        image: gcr.io/stackrox-infra/automation-flavors/eks:0.0.4-3-gcc6f16f-snapshot
        imagePullPolicy: Always
        args:
          - destroy
          - "{{workflow.parameters.name}}"
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_SECRET_ACCESS_KEY
  