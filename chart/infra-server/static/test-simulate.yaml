apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: simulate-
spec:
  entrypoint: start
  onExit: stop
  arguments:
    parameters:
      - name: name
      - name: create-delay-seconds
        value: ""
      - name: create-outcome
        value: ""
      - name: destroy-delay-seconds
        value: ""
      - name: destroy-outcome
        value: ""

  volumes:
    - name: credentials
      secret:
        secretName: google-credentials

  templates:
    - name: start
      steps:
        - - name: create
            template: simulate
            arguments:
              parameters:
              - name: delay-seconds
                value: '{{ "{{" }}workflow.parameters.create-delay-seconds{{ "}}" }}'
              - name: outcome
                value: '{{ "{{" }}workflow.parameters.create-outcome{{ "}}" }}'
        - - name: wait
            template: wait
    - name: stop
      steps:
        - - name: destroy
            template: simulate
            arguments:
              parameters:
              - name: delay-seconds
                value: '{{ "{{" }}workflow.parameters.destroy-delay-seconds{{ "}}" }}'
              - name: outcome
                value: '{{ "{{" }}workflow.parameters.destroy-outcome{{ "}}" }}'

    - name: simulate
      inputs:
        parameters:
        - name: delay-seconds
        - name: outcome
      script:
        image: gcr.io/google.com/cloudsdktool/google-cloud-cli:stable
        command: [bash]
        source: |
          set -x

          gcloud auth activate-service-account --key-file /tmp/google-credentials.json
          gcloud config set core/disable_prompts True

          BUCKET_NAME="infra-e2e-upload-test"
          FILE="{{ "{{" }}workflow.name{{ "}}" }}"
          touch "${FILE}"

          DESTINATION="gs://${BUCKET_NAME}/${FILE}"

          if gsutil -q stat "${DESTINATION}"; then
            echo "File exists. Deleting..."
            gsutil rm "${DESTINATION}"
          else
            echo "File does not exist. Proceeding to upload."
            gsutil cp "${FILE}" "${DESTINATION}"
          fi

          start=0
          while sleep 1; do
            if [[ $((start++)) -ge {{ "{{" }}inputs.parameters.delay-seconds{{ "}}" }} ]]; then
              break
            fi
          done
          [[ "{{ "{{" }}inputs.parameters.outcome{{ "}}" }}" == "success" ]] || exit 1

        volumeMounts:
          - name: credentials
            mountPath: /tmp

    - name: wait
      suspend: {}
