apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: rosa-
spec:
  entrypoint: start
  arguments:
    parameters:
      - name: name
      - name: nodes
        value: "4"
      - name: machine-type
        value: "m5.xlarge"

  templates:
    - name: start
      steps:
        - - name: create
            template: create

        - - name: wait
            template: wait

        - - name: destroy
            template: destroy

    - name: create
      activeDeadlineSeconds: 3600
      outputs:
        artifacts:
          - name: kubeconfig
            path: /data/kubeconfig
            archive:
              none: {}
          - name: data
            path: /data
            archive:
              tar: {}
      container:
        image: gcr.io/stackrox-infra/automation-flavors/openshift-rosa:0.2.12-6-gc85296024e-snapshot
        imagePullPolicy: Always
        args:
          - create
          - "{{workflow.parameters.name}}"
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_SECRET_ACCESS_KEY
          - name: NODE_COUNT
            value: "{{workflow.parameters.nodes}}"
          - name: INSTANCE_TYPE
            value: "{{workflow.parameters.machine-type}}"
          - name: CREATION_SOURCE
            value: "infra"

        volumeMounts:
          - name: data
            mountPath: /data
      volumes:
        - name: data
          emptyDir: {}

    - name: wait
      suspend: {}

    - name: destroy
      activeDeadlineSeconds: 3600
      container:
        image: gcr.io/stackrox-infra/automation-flavors/openshift-rosa:0.2.12-6-gc85296024e-snapshot
        imagePullPolicy: Always
        args:
          - destroy
          - "{{workflow.parameters.name}}"
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-access-secrets
                key: AWS_SECRET_ACCESS_KEY
