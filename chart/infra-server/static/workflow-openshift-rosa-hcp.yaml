apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: rosa-
spec:
  entrypoint: start
  arguments:
    parameters:
      - name: name
      - name: rosa-args
        value: ""
      - name: aws-region
        value: "us-east-1"
      - name: managed-cp
        value: true
      - name: subnet-ids
        value: ""
      - name: nodes
        value: "2"
      - name: machine-type
        value: "m5.2xlarge"
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Mi

  templates:
    - name: start
      steps:
        - - name: get-cloud-identifier
            template: get-cloud-identifier

        - - name: create
            template: create
            continueOn:
              failed: true

        - - name: tagger
            template: tagger
            arguments:
              parameters:
                - name: cloud_identifier
                  value: "{{ steps.get-cloud-identifier.outputs.parameter.cloud_identifier }}"
                - name: create_exit_code
                  value: "{{ steps.create.exitCode }}"

        - - name: gather
            template: gather

        - - name: wait
            template: wait

        - - name: destroy
            template: destroy

    - name: get-cloud-identifier
      container:
        image: quay.io/stackrox-io/ci:automation-flavors-rosa-0.9.14-1-gae1ba617dd-snapshot
        command:
          - ./entrypoint.sh
        args:
          - get_cloud_identifier
          - "{{workflow.parameters.name}}"
          - ">"
          - "/tmp/cloud_identifier.txt"
      outputs:
        parameters:
        - name: cloud_identifier
          valueFrom:
            path: /tmp/cloud_identifier.txt

    - name: create
      activeDeadlineSeconds: 7200
      container:
        image: quay.io/stackrox-io/ci:automation-flavors-rosa-0.9.5
        imagePullPolicy: Always
        command:
          - ./entrypoint.sh
        args:
          - create
          - "{{workflow.parameters.name}}"
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: AWS_SECRET_ACCESS_KEY
          - name: REDHAT_PULL_SECRET_BASE64
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: REDHAT_PULL_SECRET_BASE64
          - name: OPENSHIFT_CLUSTER_MANAGER_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: OPENSHIFT_CLUSTER_MANAGER_API_TOKEN
          - name: ROSA_ARGS
            value: "{{workflow.parameters.rosa-args}}"
          - name: AWS_REGION
            value: "{{workflow.parameters.aws-region}}"
          - name: MANAGED_CP
            value: "{{workflow.parameters.managed-cp}}"
          - name: SUBNET_IDS
            value: "{{workflow.parameters.subnet-ids}}"
          - name: NODE_COUNT
            value: "{{workflow.parameters.nodes}}"
          - name: INSTANCE_TYPE
            value: "{{workflow.parameters.machine-type}}"
          - name: CREATION_SOURCE
            value: "infra"
        volumeMounts:
          - name: data
            mountPath: /data

    - name: tagger
      inputs:
        parameters:
        - name: cloud_identifier
        - name: create_exit_code
      script:
        image: busybox
        command: [sh]
        source: |
          echo ">>>"
          echo "{{inputs.parameters.cloud_identifier}}"
          echo "<<<"
          echo ">>>"
          echo "{{inputs.parameters.create_exit_code}}"
          echo "<<<"
          if [[ "{{inputs.parameters.create_exit_code}}" != "0" ]]; then
            echo "fail due to create fail"
            exit 1
          fi

    - name: gather
      script:
        image: busybox
        command: [sh]
        source: |
          cd /data
          . ./dotenv
          if [[ -z "${CONSOLE_ENDPOINT// /}" ]]; then
            CONSOLE_ENDPOINT="https://console-openshift-console.apps.rosa${API_ENDPOINT#https://api}"
            echo "$CONSOLE_ENDPOINT" \
              | sed -e 's/:[0-9]*$//' > cluster-console-url
          else
            echo "${CONSOLE_ENDPOINT}" > cluster-console-url
          fi
          echo "${CONSOLE_USER}" > cluster-console-username
          echo "${CONSOLE_PASSWORD}" > cluster-console-password
        volumeMounts:
          - name: data
            mountPath: /data
      outputs:
        artifacts:
          - name: kubeconfig
            path: /data/kubeconfig
            archive:
              none: {}
          - name: dotenv
            path: /data/dotenv
            archive:
              none: {}
          - name: data
            path: /data
            archive:
              tar: {}
          - name: cluster-console-url
            path: /data/cluster-console-url
            archive:
              none: {}
          - name: cluster-console-username
            path: /data/cluster-console-username
            archive:
              none: {}
          - name: cluster-console-password
            path: /data/cluster-console-password
            archive:
              none: {}

    - name: wait
      suspend: {}

    - name: destroy
      activeDeadlineSeconds: 3600
      container:
        image: quay.io/stackrox-io/ci:automation-flavors-rosa-0.9.5
        imagePullPolicy: Always
        command:
          - ./entrypoint.sh
        args:
          - destroy
          - "{{workflow.parameters.name}}"
        env:
          - name: AWS_REGION
            value: "{{workflow.parameters.aws-region}}"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: AWS_SECRET_ACCESS_KEY
          - name: OPENSHIFT_CLUSTER_MANAGER_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: OPENSHIFT_CLUSTER_MANAGER_API_TOKEN
          - name: REDHAT_PULL_SECRET_BASE64
            valueFrom:
              secretKeyRef:
                name: osd-access-secrets
                key: REDHAT_PULL_SECRET_BASE64
        volumeMounts:
          - name: data
            mountPath: /data
