@import '~@stackrox/tailwind-config/light.theme.css';
@import '~@stackrox/tailwind-config/dark.theme.css';

@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  line-height: 1.15;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

ul,
ol,
li,
p,
span,
div,
h1,
h2,
h3,
h4,
h5,
h6 {
  @apply break-words !important;
}

button:focus {
  outline: none;
}

.sticky {
  position: sticky !important;
}

.logo {
  width: 48px;
  height: 48px;
  position: relative;
  top: 1px;
  padding: 4px;
}

/**
 * Button styles
 */
.btn-class {
  @apply inline-flex px-2 rounded-sm font-600 uppercase text-center items-center min-w-16 justify-center border-2 !important;
  line-height: 14px; /* required because we were relying on the Chrome browser default of 14px earlier */
}

.btn-sm {
  @apply btn-class py-1 text-xs !important;
}

.btn {
  @apply btn-class py-2 text-sm !important;
}

.btn-icon {
  @apply flex py-2 px-2 rounded-sm font-600 uppercase text-center text-sm items-center justify-center bg-base-200 border !important;
}

.btn-success {
  @apply text-success-700 border-success-500 bg-success-200 !important;
}

.btn-success:hover {
  @apply btn-success bg-success-300 text-success-800 !important;
}

.btn-alert {
  @apply text-alert-100 border-alert-600 bg-alert-600 !important;
}

.btn-alert:hover {
  @apply btn-alert border-alert-700 bg-alert-700 !important;
}

.btn-primary {
  @apply border-primary-300 text-primary-600 !important;
}

.btn-primary:hover {
  @apply btn-primary bg-primary-100 bg-base-200 border-primary-400 !important;
}

.btn-tertiary {
  @apply border-tertiary-700 text-tertiary-700 !important;
}

.btn-tertiary:hover {
  @apply btn-tertiary bg-tertiary-700 bg-base-200 border-tertiary-600 !important;
}

.btn-base {
  @apply text-base-600 border-base-400 bg-base-100 !important;
}

.btn-base:hover {
  @apply btn-base bg-base-200 text-base-700 !important;
}
/** End of Button styles */

.top-navigation {
  box-shadow: inset 0px -1px 0 0 var(--base-400);
}

/**
 * tippy.js
 */
@import '~tippy.js/dist/tippy.css';

.rox-tooltip-overlay {
  @apply p-2 text-sm text-center text-base-600 z-10 bg-tertiary-200 rounded border border-tertiary-400;
}

.tippy-tooltip {
  --arrow-size: 7px; /* it's defined in tippy.css, just making it the same */
  --arrow-color: var(--tertiary-200);
  --arrow-border-color: var(--tertiary-400);
}

.tippy-content {
  @apply rounded shadow-md p-0;
}

.tippy-tooltip > .tippy-arrow:after,
.tippy-tooltip > .tippy-arrow:before {
  content: '';
  position: absolute;
  z-index: -1;
}

/* tippy arrow on the top */
.tippy-tooltip[data-placement^='top'] > .tippy-arrow {
  border-top-color: var(--arrow-color);
  bottom: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='top'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='top'] > .tippy-arrow:before {
  left: calc(-1 * var(--arrow-size));
  border-left: var(--arrow-size) solid transparent;
  border-right: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='top'] > .tippy-arrow:after {
  border-top: var(--arrow-size) solid var(--arrow-color);
  top: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='top'] > .tippy-arrow:before {
  border-top: var(--arrow-size) solid var(--arrow-border-color);
  bottom: -1px;
}

/* tippy-arrow at the bottom */
.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow {
  border-bottom-color: var(--arrow-color);
  top: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:before {
  left: calc(-1 * var(--arrow-size));
  border-left: var(--arrow-size) solid transparent;
  border-right: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:after {
  border-bottom: var(--arrow-size) solid var(--arrow-color);
  bottom: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:before {
  border-bottom: var(--arrow-size) solid var(--arrow-border-color);
  bottom: calc(-1 * (var(--arrow-size) - 1px));
}

/* tippy-arrow on the left */
.tippy-tooltip[data-placement^='left'] > .tippy-arrow {
  border-left-color: var(--arrow-color);
  right: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='left'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='left'] > .tippy-arrow:before {
  top: calc(-1 * var(--arrow-size));
  border-top: var(--arrow-size) solid transparent;
  border-bottom: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='left'] > .tippy-arrow:after {
  border-left: var(--arrow-size) solid var(--arrow-color);
  left: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='left'] > .tippy-arrow:before {
  border-left: var(--arrow-size) solid var(--arrow-border-color);
  left: calc(-1 * (var(--arrow-size) - 1px));
}

/* tippy-arrow on the right */
.tippy-tooltip[data-placement^='right'] > .tippy-arrow {
  border-right-color: var(--arrow-color);
  left: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='right'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='right'] > .tippy-arrow:before {
  top: calc(-1 * var(--arrow-size));
  border-top: var(--arrow-size) solid transparent;
  border-bottom: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='right'] > .tippy-arrow:after {
  border-right: var(--arrow-size) solid var(--arrow-color);
  right: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='right'] > .tippy-arrow:before {
  border-right: var(--arrow-size) solid var(--arrow-border-color);
  right: calc(-1 * (var(--arrow-size) - 1px));
}
/** End of tippy.js styles */

.react-modal-overlay {
  @apply fixed top-0 left-0 w-full h-full z-60 !important;
  background-color: hsla(225, 41%, 32%, 0.82);
}
